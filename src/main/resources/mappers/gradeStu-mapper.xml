<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="gradeStuMapper">

<resultMap id="professorSet" type="Professor">
		<id property="profId" column="PROF_ID" />
		<result property="profPwd" column="PROF_PWD" />
		<result property="profName" column="PROF_NAME" />
		<result property="profDept" column="DEPT_CODE" />
		<result property="profRrn" column="PROF_RRN" />
		<result property="profEmail" column="PROF_EMAIL" />
		<result property="profPhone" column="PROF_PHONE" />
		<result property="profAddress" column="PROF_ADDRESS" />
		<result property="profStatus" column="PROF_STATUS" />
		<result property="profEmpdate" column="PROF_EMPDATE" />
</resultMap>
<resultMap id="subjectListSet" type="Subject">
		<id property="subCode" column="SUB_CODE" />
		<result property="subTitle" column="SUB_TITLE" />
		<result property="deptCode" column="DEPT_CODE" />
		<result property="subDivs" column="SUB_DIVS" />
		<result property="profId" column="PROF_ID" />
		<result property="subCredit" column="SUB_CREDIT" />
		<result property="subClass" column="SUB_CLASS" />
		<result property="subTime" column="SUB_TIME" />
		<result property="subType" column="SUB_TYPE" />
		<result property="subYear" column="SUB_YEAR" />
		<result property="subSmst" column="SUB_SMST" />
		<result property="status" column="STATUS" />
</resultMap>
<resultMap id="departListSet" type="Department">
		<id property="deptCode" column="DEPT_CODE" />
		<result property="deptTitle" column="DEPT_TITLE" />
</resultMap>
<resultMap id="LecRegGraListSet" type="LecRegPro">
		<collection property="subject" resultMap="subjectSet"/>
		<collection property="professor" resultMap="professorSet"/>
		<collection property="lectRegister" resultMap="RegisterResultSet"/>
		<collection property="department" resultMap="departListSet"/>
		<collection property="grade" resultMap="gradeListSet"/>
		<collection property="gradeObject" resultMap="GradeObjectSet"/>
</resultMap>
<resultMap id="subjectSet" type="Subject">
		<id property="subCode" column="SUB_CODE" />
		<result property="subTitle" column="SUB_TITLE" />
		<result property="deptCode" column="DEPT_CODE" />
		<result property="subDivs" column="SUB_DIVS" />
		<result property="profId" column="PROF_ID" />
		<result property="subCredit" column="SUB_CREDIT" />
		<result property="subClass" column="SUB_CLASS" />
		<result property="subTime" column="SUB_TIME" />
		<result property="subType" column="SUB_TYPE" />
		<result property="subYear" column="SUB_YEAR" />
		<result property="subSmst" column="SUB_SMST" />
		<result property="status" column="STATUS" />
</resultMap>
<resultMap id="gradeListSet" type="Grade">
		<id property="gradeNo" column="GRADE_NO" />
		<result property="studentId" column="STU_ID" />
		<result property="subCode" column="SUB_CODE" />
		<result property="gradeYear" column="GRADE_YEAR" />
		<result property="gradeSemester" column="GRADE_SEMESTER" />
		<result property="gradeResult" column="GRADE_RESULT" />
		<result property="gradeCredit" column="GRADE_CREDIT" />
		<result property="attendance" column="ATTENDANCE" />
		<result property="assignment" column="ASSIGNMENT" />
		<result property="midExam" column="MIDEXAM" />
		<result property="finExam" column="FINEXAM" />
</resultMap>
<resultMap id="RegisterResultSet" type="LectRegister">
		<id property="regNo" column="LECT_REG_NO" />
		<result property="subCode" column="SUB_CODE" />
		<result property="stuId" column="STU_ID" />
		<result property="year" column="YEAR" />
		<result property="semester" column="SEMESTER" />
		<result property="status" column="STATUS" />
</resultMap>
<resultMap id="CountCreditSet" type="CountCredit">
		<id property="majorC" column="MAJORC" />
		<result property="elseC" column="ELSEC" />
		<result property="allC" column="ALLC" />
		<result property="avgCredit" column="AVGCREDIT" />
		<result property="gradeRe" column="GRADERE" />
</resultMap>
<resultMap id="GradeObjectSet" type="GradeObject">
		<id property="objNo" column="GRA_OBJ_NO" />
		<result property="gradeNo" column="GRADE_NO" />
		<result property="stuId" column="STU_ID" />
		<result property="objDate" column="GRA_OBJ_DATE" />
		<result property="title" column="TITLE" />
		<result property="content" column="CONTENT" />
		<result property="status" column="STATUS" />
		<result property="reason" column="REASON" />
</resultMap>
<resultMap id="EvaluationSet" type="Evaluation">
		<id property="lectEvaNo" column="LECT_EVA_NO" />
		<result property="lectRegNo" column="LECT_REG_NO" />
		<result property="stuId" column="STU_ID" />
		<result property="question" column="QUESTION" />
		<result property="score" column="SCORE" />
		<result property="year" column="YEAR" />
		<result property="semester" column="SEMESTER" />
		<result property="status" column="STATUS" />
		<result property="count" column="COUNT" />
</resultMap>
<select id="selectReYearList" parameterType="_int" resultMap="RegisterResultSet">
		SELECT YEAR
		FROM LECT_REGISTER
		WHERE STU_ID=#{stuId} AND STATUS='Y'
		GROUP BY YEAR
		ORDER BY YEAR DESC
</select>
<select id="selectReSemeList" parameterType="_int" resultMap="RegisterResultSet">
		SELECT SEMESTER
		FROM LECT_REGISTER
		WHERE STU_ID=#{stuId} AND STATUS='Y'
		GROUP BY SEMESTER
		ORDER BY SEMESTER
</select>
<select id="selectGradeList" parameterType="_int" resultMap="LecRegGraListSet"><!-- 성적이 포함된 수강신청 목록 -->
		SELECT *
		FROM LECT_REGISTER A
		LEFT JOIN SUBJECT B ON A.SUB_CODE=B.SUB_CODE
		LEFT JOIN PROFESSOR C ON B.PROF_ID=C.PROF_ID
		LEFT JOIN DEPARTMENT D ON B.DEPT_CODE=D.DEPT_CODE
		LEFT JOIN GRADE E ON A.STU_ID=E.STU_ID AND B.SUB_CODE=E.SUB_CODE
		WHERE A.STU_ID=#{stuId} AND A.STATUS='Y'
		ORDER BY A.YEAR DESC, A.SEMESTER DESC
</select>
<select id="cCredit" parameterType="_int" resultMap="CountCreditSet"><!-- 전체 학점 비율 -->
		SELECT SUM(CASE WHEN B.SUB_DIVS=1 THEN B.SUB_CREDIT ELSE 0 END) MAJORC,
		        SUM(CASE WHEN B.SUB_DIVS=2 THEN B.SUB_CREDIT ELSE 0 END) ELSEC,
		        SUM(CASE WHEN B.SUB_DIVS=1 OR B.SUB_DIVS=2 THEN B.SUB_CREDIT ELSE 0 END) ALLC,
		        SUM(CASE WHEN B.SUB_DIVS=1 OR B.SUB_DIVS=2 THEN E.GRADE_CREDIT ELSE 0 END)/COUNT(CASE WHEN B.SUB_DIVS=1 OR B.SUB_DIVS=2 THEN E.GRADE_CREDIT ELSE 0 END) AVGCREDIT,
		        SUM(CASE WHEN B.SUB_DIVS=1 OR B.SUB_DIVS=2 THEN TO_NUMBER(E.GRADE_RESULT) ELSE 0 END)/COUNT(CASE WHEN B.SUB_DIVS=1 OR B.SUB_DIVS=2 THEN TO_NUMBER(E.GRADE_RESULT) ELSE 0 END) GRADERE
		FROM LECT_REGISTER A
		LEFT JOIN SUBJECT B ON A.SUB_CODE=B.SUB_CODE
		LEFT JOIN PROFESSOR C ON B.PROF_ID=C.PROF_ID
		LEFT JOIN DEPARTMENT D ON B.DEPT_CODE=D.DEPT_CODE
		LEFT JOIN GRADE E ON A.STU_ID=E.STU_ID AND B.SUB_CODE=E.SUB_CODE
		WHERE A.STU_ID=#{stuId} AND A.STATUS='Y'
</select>
<select id="selectGradeSearchList" parameterType="SearchReg" resultMap="LecRegGraListSet"><!-- 성적이 포함된 수강신청 목록 -->
		SELECT *
		FROM LECT_REGISTER A
		LEFT JOIN SUBJECT B ON A.SUB_CODE=B.SUB_CODE
		LEFT JOIN PROFESSOR C ON B.PROF_ID=C.PROF_ID
		LEFT JOIN DEPARTMENT D ON B.DEPT_CODE=D.DEPT_CODE
		LEFT JOIN GRADE E ON A.STU_ID=E.STU_ID AND B.SUB_CODE=E.SUB_CODE
		WHERE A.STU_ID=#{stuId} 
		<choose>
			<when test='condition1 != 0 and condition2 != 0'>
			 	AND YEAR=#{condition1}
			 	AND SEMESTER=#{condition2}
			</when>
			<when test='condition1 != 0'>
			 	AND YEAR=#{condition1}
			</when>
			<when test='condition2 != 0'>
				AND SEMESTER=#{condition2}
			</when>
		</choose>
		 AND A.STATUS='Y'
		 ORDER BY A.YEAR DESC, A.SEMESTER DESC
</select>
<select id="cSearchCredit" parameterType="SearchReg" resultMap="CountCreditSet"><!-- 전체 학점 비율 -->
		SELECT SUM(CASE WHEN B.SUB_DIVS=1 THEN B.SUB_CREDIT ELSE 0 END) MAJORC,
		        SUM(CASE WHEN B.SUB_DIVS=2 THEN B.SUB_CREDIT ELSE 0 END) ELSEC,
		        SUM(CASE WHEN B.SUB_DIVS=1 OR B.SUB_DIVS=2 THEN B.SUB_CREDIT ELSE 0 END) ALLC,
		        SUM(CASE WHEN B.SUB_DIVS=1 OR B.SUB_DIVS=2 THEN E.GRADE_CREDIT ELSE 0 END)/COUNT(CASE WHEN B.SUB_DIVS=1 OR B.SUB_DIVS=2 THEN E.GRADE_CREDIT ELSE 0 END) AVGCREDIT,
		        SUM(CASE WHEN B.SUB_DIVS=1 OR B.SUB_DIVS=2 THEN TO_NUMBER(E.GRADE_RESULT) ELSE 0 END)/COUNT(CASE WHEN B.SUB_DIVS=1 OR B.SUB_DIVS=2 THEN TO_NUMBER(E.GRADE_RESULT) ELSE 0 END) GRADERE
		FROM LECT_REGISTER A
		LEFT JOIN SUBJECT B ON A.SUB_CODE=B.SUB_CODE
		LEFT JOIN PROFESSOR C ON B.PROF_ID=C.PROF_ID
		LEFT JOIN DEPARTMENT D ON B.DEPT_CODE=D.DEPT_CODE
		LEFT JOIN GRADE E ON A.STU_ID=E.STU_ID AND B.SUB_CODE=E.SUB_CODE
		WHERE A.STU_ID=#{stuId} 
		<choose>
			<when test='condition1 != 0 and condition2 != 0'>
			 	AND YEAR=#{condition1}
			 	AND SEMESTER=#{condition2}
			</when>
			<when test='condition1 != 0'>
			 	AND YEAR=#{condition1}
			</when>
			<when test='condition2 != 0'>
				AND SEMESTER=#{condition2}
			</when>
		</choose>
		AND A.STATUS='Y'
</select>
<select id="gradeDetailList" parameterType="LectRegister" resultMap="LecRegGraListSet">
		SELECT *
		FROM LECT_REGISTER A
		LEFT JOIN SUBJECT B ON A.SUB_CODE=B.SUB_CODE
		LEFT JOIN PROFESSOR C ON B.PROF_ID=C.PROF_ID
		LEFT JOIN DEPARTMENT D ON B.DEPT_CODE=D.DEPT_CODE
		LEFT JOIN GRADE E ON A.STU_ID=E.STU_ID AND B.SUB_CODE=E.SUB_CODE
		WHERE A.SUB_CODE=#{subCode} AND A.STU_ID=#{stuId} AND A.YEAR=#{year} AND A.SEMESTER=#{semester} AND A.STATUS='Y'
</select>
<select id="objectList" parameterType="_int" resultMap="GradeObjectSet">
		SELECT *
		FROM GRA_OBJECT
		WHERE STU_ID=#{stuId} AND STATUS='Y'
</select>	
<insert id="insertGradeObj" parameterType="GradeObject" >
		INSERT INTO GRA_OBJECT(GRA_OBJ_NO,GRADE_NO, STU_ID, GRA_OBJ_DATE,TITLE,CONTENT, STATUS )
		values(SEQ_GRA_OBJ_NO.NEXTVAL, #{gradeNo}, #{stuId}, SYSDATE, #{title}, #{content}, default)
</insert>	
<select id="gradeObjectList" parameterType="_int" resultMap="LecRegGraListSet">
		SELECT *
		FROM GRA_OBJECT A
		LEFT JOIN GRADE B ON A.GRADE_NO=B.GRADE_NO
		LEFT JOIN SUBJECT C ON B.SUB_CODE=C.SUB_CODE
		LEFT JOIN PROFESSOR D ON C.PROF_ID=D.PROF_ID
		LEFT JOIN DEPARTMENT E ON C.DEPT_CODE=E.DEPT_CODE
		LEFT JOIN LECT_REGISTER F ON C.SUB_CODE=F.SUB_CODE
		WHERE A.STU_ID=#{stuId} AND F.STU_ID=#{stuId}
</select>
<select id="gradeObjectDetailPage" parameterType="LectRegister" resultMap="LecRegGraListSet">
		SELECT *
		FROM GRA_OBJECT A
		LEFT JOIN GRADE B ON A.GRADE_NO=B.GRADE_NO
		LEFT JOIN SUBJECT C ON B.SUB_CODE=C.SUB_CODE
		LEFT JOIN PROFESSOR D ON C.PROF_ID=D.PROF_ID
		LEFT JOIN DEPARTMENT E ON C.DEPT_CODE=E.DEPT_CODE
		LEFT JOIN LECT_REGISTER F ON C.SUB_CODE=F.SUB_CODE
		WHERE A.STU_ID=#{stuId} AND F.STU_ID=#{stuId} AND B.SUB_CODE=#{subCode} AND F.STATUS='Y' AND B.GRADE_YEAR=#{year} AND B.GRADE_SEMESTER=#{semester}
</select>
<select id="evalQuestionList" parameterType="LectRegister" resultMap="EvaluationSet">
		SELECT *
		FROM LECT_EVALUATE A
		LEFT JOIN LECT_REGISTER B ON A.LECT_REG_NO=B.LECT_REG_NO
		WHERE A.STU_ID=#{stuId} AND B.STU_ID=#{stuId} AND B.SUB_CODE=#{subCode} AND A.STATUS='N' AND A.YEAR=#{year} AND A.SEMESTER=#{semester}
		ORDER BY A.LECT_EVA_NO
</select>
<select id="countEval" parameterType="EvaluationScore" resultType="_int">
		SELECT COUNT(LECT_REG_NO)
		FROM LECT_EVALUATE 
		WHERE STU_ID=#{stuId} AND LECT_REG_NO=#{lectNum} AND STATUS='N'
</select>
<insert id="insertEvaluation" parameterType="EvaluationScore" >
		<foreach collection="param.historyList" item="item" index="index" separator="UNION ALL">
		INSERT ALL
		<if test="grade1 != null">
		INSERT INTO LECT_EVALUATE(SCORE, STATUS )
		values (#{grade1},'Y')
		WHERE LECT_REG_NO=#{lectNum}
	  	</if>
	  	<if test="grade2 != null">
	  	INSERT INTO LECT_EVALUATE(SCORE, STATUS )
		values(#{grade2},'Y')
		WHERE LECT_REG_NO=#{lectNum}
	  	</if>
	  	<if test="grade3 != null">
	  	INSERT INTO LECT_EVALUATE(SCORE, STATUS )
		values(#{grade3},'Y')
		WHERE LECT_REG_NO=#{lectNum}
	  	</if>
	  	<if test="grade4 != null">
	  	INSERT INTO LECT_EVALUATE(SCORE, STATUS )
		values(#{grade4},'Y')
		WHERE LECT_REG_NO=#{lectNum}
	  	</if>
	  	<if test="grade5 != null">
	  	INSERT INTO LECT_EVALUATE(SCORE, STATUS )
		values(#{grade5},'Y')
		WHERE LECT_REG_NO=#{lectNum}
	  		</if>
	  		<if test="grade6 != null">
	  	INSERT INTO LECT_EVALUATE(SCORE, STATUS )
		values(#{grade6},'Y')
		WHERE LECT_REG_NO=#{lectNum}
	  		</if>
	  		<if test="grade7 != null">
	  	INSERT INTO LECT_EVALUATE(SCORE, STATUS )
		values(#{grade7},'Y')
		WHERE LECT_REG_NO=#{lectNum}
	  		</if>
	  		<if test="grade8 != null">
	  	INSERT INTO LECT_EVALUATE(SCORE, STATUS )
		values(#{grade8},'Y')
		WHERE LECT_REG_NO=#{lectNum}
	  		</if>
	  		<if test="grade9 != null">
	  	INSERT INTO LECT_EVALUATE(SCORE, STATUS )
		values(#{grade9},'Y')
		WHERE LECT_REG_NO=#{lectNum}
	  		</if> 
	  		<if test="grade10 != null">
	  	INSERT INTO LECT_EVALUATE(SCORE, STATUS )
		values(#{grade10},'Y')
		WHERE LECT_REG_NO=#{lectNum}
	  		</if> 
	  	SELECT * FROM DUAL
	  	</foreach>
</insert>	
</mapper>
	