<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="profMapper">

	<!-- 교수 --> 
	<resultMap id="profResultSet" type="Professor">
		<id property="profId" column="PROF_ID"/>
		<result property="profPwd" column="PROF_PWD"/>
		<result property="profName" column="PROF_NAME"/>
		<result property="profDept" column="DEPT_CODE"/>
		<result property="profRrn" column="PROF_RRN"/>
		<result property="profEmail" column="PROF_EMAIL"/>
		<result property="profPhone" column="PROF_PHONE"/>
		<result property="profAddress" column="PROF_ADDRESS"/>
		<result property="profStatus" column="PROF_STATUS"/>
		<result property="profEmpdate" column="PROF_EMPDATE"/>
		<result property="profDeptTitle" column="DEPT_TITLE"/>
		<!-- <collection property="department" resultMap="DepartmentSet"/> -->
	</resultMap>
	<resultMap id="DepartmentSet" type="Department">
		<id property="deptCode" column="DEPT_CODE"/>
		<result property="deptTitle" column="DEPT_TITLE"/>
	</resultMap>
	
	<!-- 강의 -->
	<resultMap id="profSubResultSet" type="Subject">
		<id property="subCode" column="SUB_CODE"/>
		<result property="subTitle" column="SUB_TITLE"/>
		<result property="deptCode" column="DEPT_CODE"/>
		<result property="subDivs" column="SUB_DIVS"/>
		<result property="profId" column="PROF_ID"/>
		<result property="subCredit" column="SUB_CREDIT"/>
		<result property="subClass" column="SUB_CLASS"/>
		<result property="subTime" column="SUB_TIME"/>
		<result property="subType" column="SUB_TYPE"/>
		<result property="subYear" column="SUB_YEAR"/>
		<result property="subSmst" column="SUB_SMST"/>
		<result property="status" column="STATUS"/>
		<result property="originName" column="ORIGIN_NAME"/>
		<result property="changeName" column="CHANGE_NAME"/>
	</resultMap>
	
	<!-- 학생 -->
	<resultMap type="Student" id="profStuResultSet">
		<id property="stuId" column="STU_ID"/>
		<result property="deptName" column="DEPT_TITLE"/>	
		<result property="profId" column="PROF_ID"/>	
		<result property="stuName" column="STU_NAME"/>	
		<result property="email" column="EMAIL"/>	
		<result property="phone" column="PHONE"/>	
		<result property="stuStatus" column="STU_STATUS"/>	
		<result property="year" column="YEAR"/>
		<result property="semester" column="SEMESTER"/>
	</resultMap>
	
	<!-- 상담 -->
	<resultMap type="Consult" id="consultResultSet">
		<id property="conNo" column="CON_NO"/>
		<result property="conCategory" column="CON_CATEGORY"/>	
		<result property="conDate" column="CON_DATE"/>	
		<result property="conReason" column="CON_REASON"/>	
		<result property="rejectReason" column="REJECT_REASON"/>	
		<result property="status" column="STATUS"/>	
		<result property="stuId" column="STU_ID"/>
		<collection property="student" resultMap="profStuResultSet"/>
		<collection property="consultStatus" resultMap="consultStatusSet"/>
	</resultMap>
	<resultMap type="ConsultStatus" id="consultStatusSet">
		<id property="conStsNo" column="CON_STS_NO"/>
		<result property="conProcess" column="CON_PROCESS"/>
		<result property="conCompleted" column="CON_COMPLETED"/>
		<result property="status" column="STATUS"/>
		<result property="conNo" column="CON_NO"/>
	</resultMap>
	
	
	
	<!-- 강의평가 -->
	<resultMap type="Evaluation" id="evalResultSet">
		<id property="lectEvaNo" column="LECT_EVA_NO"/>
		<result property="question" column="QUESTION"/>
		<result property="dscore" column="SCORE"/>
		<result property="year" column="YEAR"/>
		<result property="semester" column="SEMESTER"/>
		<collection property="subject" resultMap="profSubResultSet"/>
		<collection property="professor" resultMap="profResultSet"/>
	</resultMap>
	<!-- <resultMap id="evalResultSet" type="LecRegPro">
		<id property="evaluation" column="SCORE" />
		<collection property="subject" resultMap="profSubResultSet"/>
		<collection property="professor" resultMap="profResultSet"/>
		<collection property="department" resultMap="DepartmentSet"/>
	</resultMap> -->
	
	<!-- 자퇴 -->
	<resultMap type="StudentDo" id="doStatusResultSet">
		<id property="applicationNo" column="APPLICATION_NO_DO"/>
		<result property="stuId" column="STU_ID"/>
		<result property="doDate" column="DO_DATE"/>
		<result property="doReason" column="DO_REASON"/>
		<result property="status" column="STATUS"/>
		<result property="stuName" column="STU_NAME"/>
		<result property="stuStatus" column="STU_STATUS"/>
		<collection property="student" resultMap="profStuResultSet"/>
		<collection property="studentStatus" resultMap="studentStatus"/>
	</resultMap>
	
	<!-- 휴학 -->
	<resultMap type="StudentOff" id="offStatusResultSet">
		<id property="applicationNo" column="APPLICATION_NO_OFF"/>
		<result property="stuId" column="STU_ID"/>
		<result property="offCategory" column="OFF_CATEGORY"/>
		<result property="offDate" column="OFF_DATE"/>
		<result property="offSemCnt" column="OFF_SEM_CNT"/>
		<result property="offSem" column="OFF_SEM"/>
		<result property="offReason" column="OFF_REASON"/>
		<result property="status" column="STATUS"/>
		<!-- <result property="stuName" column="STU_NAME"/>
		<result property="stuStatus" column="STU_STATUS"/> -->
		<collection property="student" resultMap="profStuResultSet"/>
		<collection property="studentStatus" resultMap="studentStatus"/>
	</resultMap>
	
	<resultMap type="StudentStatus" id="studentStatus">
		<id property="stsNo" column="STS_NO"/>
		<result property="stsProcess" column="STS_PROCESS"/>
		<result property="stsComplete" column="STS_COMPLETE"/>
		<result property="stsCategory" column="STS_CATEGORY"/>
		<result property="status" column="STATUS"/>
	</resultMap>
	
	<!-- 강의 신청 -->
	<resultMap type="RequestedSubject" id="reqSubResultSet">
		<id property="reqSubNo" column="REQSUB_NO"/>
		<result property="deptCode" column="DEPT_CODE"/>
		<result property="subDivs" column="SUB_DIVS"/>
		<result property="subType" column="SUB_TYPE"/>
		<result property="subTitle" column="SUB_TITLE"/>
		<result property="profId" column="PROF_ID"/>
		<result property="subCredit" column="SUB_CREDIT"/>
		<result property="subTime" column="SUB_TIME"/>
		<result property="status" column="STATUS"/>
		<result property="attOrigin" column="ATT_ORIGIN"/>
		<result property="attChange" column="ATT_CHANGE"/>
		<result property="reqDate" column="REQ_DATE"/>
		<result property="subCode" column="SUB_CODE"/>
		<result property="reqType" column="REQ_TYPE"/>
	</resultMap>
	
	<!-- 로그인 교수 -->
	<select id="loginProfessor" parameterType="Professor" resultMap="profResultSet">
		SELECT * FROM PROFESSOR
		WHERE PROF_ID=#{profId} AND PROF_STATUS='Y'
	</select>
	
	
	<!-- 마이페이지 -->
	<!-- 교수 마이페이지 개인정보 조회 -->
	<select id="selectMypage" parameterType="Professor" resultMap="profResultSet">
		SELECT A.PROF_ID, A.PROF_NAME, B.DEPT_TITLE, A.PROF_EMAIL, A.PROF_PHONE, A.PROF_ADDRESS, A.PROF_RRN
		FROM PROFESSOR A
		JOIN DEPARTMENT B ON A.DEPT_CODE=B.DEPT_CODE
		WHERE PROF_ID=#{profId} AND PROF_STATUS='Y'
	</select>
	
	<!-- 교수 마이페이지 개인정보 수정 -->
	<update id="editMypage" parameterType="Professor">
		UPDATE PROFESSOR
		SET PROF_PWD=#{profPwd}, PROF_EMAIL=#{profEmail}, PROF_PHONE=#{profPhone}, PROF_ADDRESS=#{profAddress}
		WHERE PROF_ID=#{profId} AND PROF_STATUS='Y'
	</update>
	
	
	
	<!-- 강의관리 -->
	<!-- 강의개설 -->
	<!-- 학과명, 교수명 불러오기 -->
	<select id="profInfoLoad" parameterType="Professor" resultMap="profResultSet">
		SELECT DEPT_TITLE, PROF_NAME
		FROM PROFESSOR
		JOIN DEPARTMENT USING(DEPT_CODE)
		WHERE PROF_ID=#{profId}
	</select>
	<!-- 과목정보 불러오기 -->
	<select id="subInfoLoad" parameterType="Map" resultMap="profSubResultSet">
		SELECT SUB_DIVS, SUB_TYPE, SUB_TITLE, SUB_CREDIT, SUB_TIME, SUB_CODE, ORIGIN_NAME, CHANGE_NAME
		FROM SUBJECT
		WHERE PROF_ID=#{profId} AND SUB_CODE=#{subCode}
	</select>
	
	<!-- 강의개설 신청 -->
	<insert id="profCreateLecture" parameterType="RequestedSubject">
		INSERT INTO REQ_SUBJECT
		VALUES (SEQ_REQSUB_NO.NEXTVAL, #{deptCode}, #{subDivs}, #{subType}, #{subTitle}, #{profId},
				#{subCredit}, #{subTime}, 'C', DEFAULT, #{attOrigin, jdbcType=VARCHAR}, #{attChange, jdbcType=VARCHAR}, 
				DEFAULT, NULL)
	</insert>
	<select id="createDuplCheck" parameterType="RequestedSubject" resultType="_int">
		SELECT COUNT(*)
		FROM REQ_SUBJECT
		WHERE PROF_ID=#{profId} AND SUB_TITLE=#{subTitle} AND REQ_TYPE='C' AND STATUS='N'
	</select>
	
	<!-- 강의목록 조회 -->
	<!-- 교수 강의목록 개수 -->
	<select id="subListCount" resultType="_int">
		SELECT COUNT(*)
		FROM SUBJECT
		WHERE PROF_ID=#{profId}
	</select>
	
	<!-- 교수 강의목록 불러오기 -->
	<select id="selectSubList" resultMap="profSubResultSet">
		SELECT *
		FROM SUBJECT
		JOIN PROFESSOR USING(PROF_ID)
		WHERE PROF_ID=#{profId}
		ORDER BY SUB_YEAR DESC, SUB_SMST DESC
	</select>
	
	<!-- 강의정보 수정 -->
	<insert id="editLectReq" parameterType="RequestedSubject">
		INSERT INTO REQ_SUBJECT
		VALUES (SEQ_REQSUB_NO.NEXTVAL, #{deptCode}, #{subDivs}, #{subType}, #{subTitle}, #{profId},
				#{subCredit}, #{subTime}, 'E', DEFAULT, #{attOrigin, jdbcType=VARCHAR}, #{attChange, jdbcType=VARCHAR}, 
				DEFAULT, #{subCode})
	</insert>
	<select id="editDuplCheck" parameterType="RequestedSubject" resultType="_int">
		SELECT COUNT(*)
		FROM REQ_SUBJECT
		WHERE PROF_ID=#{profId} AND SUB_TITLE=#{subTitle} AND REQ_TYPE='E' AND STATUS='N'
	</select>
	
	<!-- 강의삭제 -->
	<select id="delSubInfo" parameterType="Map" resultMap="profSubResultSet">
		SELECT SUB_CODE, SUB_DIVS, SUB_TYPE, SUB_TITLE, SUB_CREDIT, SUB_TIME
		FROM SUBJECT
		WHERE PROF_ID=#{profId} AND SUB_CODE=#{subCode}
	</select>
	<insert id="delLectReq" parameterType="RequestedSubject">
		INSERT INTO REQ_SUBJECT(REQSUB_NO, PROF_ID, REQ_TYPE, STATUS, SUB_CODE, SUB_DIVS, SUB_TITLE, SUB_CREDIT, SUB_TYPE, SUB_TIME)
		VALUES(SEQ_REQSUB_NO.NEXTVAL, #{profId}, 'D', DEFAULT, #{subCode}, #{subDivs}, #{subTitle}, #{subCredit}, #{subType}, #{subTime})
	</insert>
	<select id="delDuplCheck" parameterType="RequestedSubject" resultType="_int">
		SELECT COUNT(*)
		FROM REQ_SUBJECT
		WHERE PROF_ID=#{profId} AND SUB_TITLE=#{subTitle} AND REQ_TYPE='D' AND STATUS='N'
	</select>
	
	<!-- 강의개설/수정/삭제 목록 -->
	<select id="reqSubListCount" resultType="_int">
		SELECT COUNT(*)
		FROM REQ_SUBJECT
		WHERE PROF_ID=#{profId}
	</select>
	<select id="selectReqSubList" resultMap="reqSubResultSet">
		SELECT SUB_DIVS, SUB_TYPE, SUB_TITLE, SUB_CREDIT, SUB_TIME, ATT_ORIGIN, ATT_CHANGE, STATUS, REQ_DATE, REQ_TYPE
		FROM REQ_SUBJECT
		WHERE PROF_ID=#{profId}
		ORDER BY REQSUB_NO DESC
	</select>
	
	<!-- 학생관리 -->
	<!-- 학생목록조회 -->
	<!-- 강의별 학생목록 불러오기 -->
	<select id="selectFilteredStu" resultMap="profStuResultSet">
		SELECT B.DEPT_TITLE, A.STU_ID, A.STU_NAME, A.STU_STATUS, A.EMAIL, A.PHONE
		FROM STUDENT A
		JOIN DEPARTMENT B ON A.DEPT_CODE=B.DEPT_CODE
		JOIN LECT_REGISTER C ON A.STU_ID=C.STU_ID
		JOIN SUBJECT D ON C.SUB_CODE=D.SUB_CODE
		WHERE C.SUB_CODE=#{subCode} AND C.YEAR=#{year} AND C.SEMESTER=#{semester} AND D.PROF_ID=#{profId}
		ORDER BY A.DEPT_CODE
	</select>
	
	<!-- 학생상담관리 -->
	<select id="loadConsultCount" resultType="_int">
		SELECT COUNT(*)
		FROM CONSULT A
		JOIN STUDENT B ON A.STU_ID=B.STU_ID
		JOIN CONSULT_STATUS_PRO C ON A.CON_NO=C.CON_NO
		WHERE B.PROF_ID=#{profId} AND A.STATUS='Y'
	</select>
	<select id="loadConsultList" resultMap="consultResultSet">
		SELECT A.CON_NO, A.CON_CATEGORY, A.CON_DATE, B.STU_NAME, C.CON_PROCESS
		FROM CONSULT A
		JOIN STUDENT B ON A.STU_ID=B.STU_ID
		JOIN CONSULT_STATUS_PRO C ON A.CON_NO=C.CON_NO
		WHERE B.PROF_ID=#{profId} AND A.STATUS='Y'
		ORDER BY A.CON_NO DESC
	</select>
	<select id="detailConsult"  resultType="Consult" resultMap="consultResultSet">
		SELECT *
		FROM CONSULT
		JOIN STUDENT USING(STU_ID)
		WHERE CON_NO=#{conNo}
	</select>
	<update id="profConCheck" parameterType="Consult">
		UPDATE CONSULT
		SET REJECT_REASON=#{rejectReason, jdbcType=VARCHAR}
		WHERE CON_NO=#{conNo}
	</update>
	<update id="profConComplete" parameterType="ConsultStatus">
		UPDATE CONSULT_STATUS_PRO
		SET CON_PROCESS=#{status}, CON_COMPLETED='완료'
		WHERE CON_NO=#{conNo}
	</update>
	
	<!-- 학생출결관리 -->
	
	<!-- 강의평가조회 -->
	<select id="evalSubCount" resultType="_int" parameterType="SearchSubject">
		SELECT COUNT(*)
		FROM SUBJECT
		WHERE PROF_ID=#{profId}
		<choose>
			<when test='con1 == 0 and con2 == 0 and keyword == "%"'>
			</when>
			<when test='con1 != 0 and con2 == 0 and keyword == "%"'>
				AND SUB_YEAR=#{con1}
			</when>
			<when test='con1 == 0 and con2 != 0 and keyword == "%"'>
				AND SUB_SMST=#{con2}
			</when>
			<when test='con1 == 0 and con2 == 0 and keyword != "%"'>
				AND SUB_TITLE LIKE '%'||#{keyword}||'%'
			</when>
			<when test='con1 != 0 and con2 != 0 and keyword == "%"'>
				AND SUB_YEAR=#{con1}
				AND SUB_SMST=#{con2}
			</when>
			<when test='con1 != 0 and con2 == 0 and keyword != "%"'>
				AND SUB_YEAR=#{con1}
				AND SUB_TITLE LIKE '%'||#{keyword}||'%'
			</when>
			<when test='con1 == 0 and con2 != 0 and keyword != "%"'>
				AND SUB_SMST=#{con2}
				AND SUB_TITLE LIKE '%'||#{keyword}||'%'
			</when>
			<when test='con1 != 0 and con2 != 0 and keyword != "%"'>
				AND SUB_YEAR=#{con1}
				AND SUB_SMST=#{con2}
				AND SUB_TITLE LIKE '%'||#{keyword}||'%'
			</when>
		</choose>
	</select>
	<select id="evalSubList" parameterType="SearchSubject" resultMap="profSubResultSet">
		SELECT A.SUB_YEAR, A.SUB_SMST, A.SUB_CODE, B.DEPT_TITLE, A.SUB_DIVS, A.SUB_TITLE, A.SUB_CREDIT, A.SUB_TYPE, C.PROF_NAME
		FROM SUBJECT A
		JOIN DEPARTMENT B ON A.DEPT_CODE=B.DEPT_CODE 
		JOIN PROFESSOR C ON A.PROF_ID=C.PROF_ID
		WHERE A.PROF_ID=#{profId}
		<choose>
			<when test='con1 == 0 and con2 == 0 and keyword == "%"'>
			</when>
			<when test='con1 != 0 and con2 == 0 and keyword == "%"'>
				AND SUB_YEAR=#{con1}
			</when>
			<when test='con1 == 0 and con2 != 0 and keyword == "%"'>
				AND SUB_SMST=#{con2}
			</when>
			<when test='con1 == 0 and con2 == 0 and keyword != "%"'>
				AND SUB_TITLE LIKE '%'||#{keyword}||'%'
			</when>
			<when test='con1 != 0 and con2 != 0 and keyword == "%"'>
				AND SUB_YEAR=#{con1}
				AND SUB_SMST=#{con2}
			</when>
			<when test='con1 != 0 and con2 == 0 and keyword != "%"'>
				AND SUB_YEAR=#{con1}
				AND SUB_TITLE LIKE '%'||#{keyword}||'%'
			</when>
			<when test='con1 == 0 and con2 != 0 and keyword != "%"'>
				AND SUB_SMST=#{con2}
				AND SUB_TITLE LIKE '%'||#{keyword}||'%'
			</when>
			<when test='con1 != 0 and con2 != 0 and keyword != "%"'>
				AND SUB_YEAR=#{con1}
				AND SUB_SMST=#{con2}
				AND SUB_TITLE LIKE '%'||#{keyword}||'%'
			</when>
		</choose>
		ORDER BY SUB_YEAR DESC, SUB_SMST DESC
	</select>
	
	<select id="selectFilteredEval" resultMap="evalResultSet">
		<!-- SELECT A.*, B.PROF_ID, B.PROF_NAME, C.DEPT_CODE, C.DEPT_TITLE, Q.* -->
		SELECT Q.SCORE
		FROM SUBJECT A
		LEFT JOIN PROFESSOR B ON A.PROF_ID=B.PROF_ID
		LEFT JOIN DEPARTMENT C ON A.DEPT_CODE=C.DEPT_CODE
		LEFT JOIN (
		    SELECT D.SUB_CODE, AVG(F.SCORE) AS "SCORE"
		    FROM SUBJECT D
		    JOIN LECT_REGISTER E ON D.SUB_CODE=E.SUB_CODE
		    JOIN LECT_EVALUATE F ON E.LECT_REG_NO=F.LECT_REG_NO
		    GROUP BY D.SUB_CODE
		) Q ON A.SUB_CODE=Q.SUB_CODE
		WHERE A.SUB_CODE=#{subCode} AND B.PROF_ID=#{profId} AND A.STATUS='Y'
	</select>
	
	
	
	<!-- 학적변동승인 -->
	<!-- 자퇴 -->
	<select id="doListCount" resultType="_int">
		SELECT COUNT(*)
		FROM STU_DO
		JOIN STUDENT USING(STU_ID)
		WHERE PROF_ID=#{profId}
	</select>
	<select id="loadDoList" resultMap="doStatusResultSet" parameterType="StudentDo">
	<!-- 쿼리 잘돌아감 -->
		SELECT C.STU_NAME, B.DO_DATE, C.STU_STATUS, B.DO_REASON, A.STS_PROCESS, A.APPLICATION_NO_DO
		FROM STU_STATUS_PRO A
		JOIN STU_DO B ON A.APPLICATION_NO_DO=B.APPLICATION_NO
		JOIN STUDENT C ON C.STU_ID=B.STU_ID
		WHERE C.PROF_ID=#{profId}
		ORDER BY B.APPLICATION_NO DESC
	</select>
	<select id="detailDo" resultType="StudentDo" resultMap="doStatusResultSet">
	<!-- 쿼리 잘돌아감 -->
		SELECT B.STU_ID, B.STU_NAME, A.DO_DATE, B.STU_STATUS, A.DO_REASON, A.APPLICATION_NO
		FROM STU_DO A 
		JOIN STUDENT B ON A.STU_ID=B.STU_ID
		WHERE APPLICATION_NO=#{applicationNo}
	</select>
	<update id="profDoCheck" parameterType="StudentStatus">
		UPDATE STU_STATUS_PRO
		SET STS_PROCESS='관리자승인대기'
		WHERE APPLICATION_NO_DO=#{applicationNo}
	</update>

	
	<!-- 휴학 -->
	<select id="offListCount" resultType="_int">
		SELECT COUNT(*)
		FROM STU_OFF
		JOIN STUDENT USING(STU_ID)
		WHERE PROF_ID=#{profId}
	</select>
	<select id="loadOffList" resultMap="offStatusResultSet">
		SELECT C.STU_NAME, B.OFF_DATE, C.STU_STATUS, B.OFF_CATEGORY, B.OFF_SEM_CNT, 
				B.OFF_SEM, B.OFF_REASON, A.STS_PROCESS, A.APPLICATION_NO_OFF
		FROM STU_STATUS_PRO A
		JOIN STU_OFF B ON A.APPLICATION_NO_OFF=B.APPLICATION_NO
		JOIN STUDENT C ON C.STU_ID=B.STU_ID
		WHERE C.PROF_ID=#{profId}
		ORDER BY B.APPLICATION_NO DESC
	</select>
	<select id="detailOff" resultType="StudentOff" resultMap="offStatusResultSet">
	<!-- 쿼리 잘돌아감 -->
		SELECT B.STU_ID, B.STU_NAME, B.STU_STATUS, A.OFF_DATE, A.OFF_CATEGORY, A.OFF_SEM_CNT, A.OFF_SEM, A.OFF_REASON, A.APPLICATION_NO
		FROM STU_OFF A
		JOIN STUDENT B ON A.STU_ID=B.STU_ID
		WHERE APPLICATION_NO=#{applicationNo}
	</select>
	<update id="profOffCheck" parameterType="StudentStatus">
		UPDATE STU_STATUS_PRO
		SET STS_PROCESS='관리자승인대기'
		WHERE APPLICATION_NO_OFF=#{applicationNo}
	</update>
	
	
<!-- 	<select id="studentProList" resultMap="studentStatusResultMap" parameterType="string">
		SELECT STU_STATUS_PRO.STS_PROCESS, STU_STATUS_PRO.STS_CATEGORY, STU_STATUS_PRO.STS_COMPLETE, STU_STATUS_PRO.STATUS, APPLICATION_NO_OFF,APPLICATION_NO_DO
		FROM STU_STATUS_PRO
		LEFT JOIN STU_OFF ON STU_STATUS_PRO.APPLICATION_NO_OFF = STU_OFF.APPLICATION_NO
		LEFT JOIN STU_DO ON STU_STATUS_PRO.APPLICATION_NO_DO = STU_DO.APPLICATION_NO
		WHERE  STU_STATUS_PRO.STATUS = 'Y'
		AND (STU_OFF.STU_ID = #{stuId} OR STU_DO.STU_ID = #{stuId})
	</select> -->
	
	
</mapper>